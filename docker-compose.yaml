version: '0.3'

services:
  webmusic_service:
    image: 'apimusic-service:latest'
    build:
      context: ./MusicService
      dockerfile: Dockerfile
    ports:
      - "5231:80"
    environment:
      - ConnectionStrings__MusicServer=User ID=postgres;Server=host.docker.internal;Port=5432;Database=music_db;Password=postgres;Pooling=True;
    networks:
      - ocelet-net
    depends_on:
      - postgres

  webuser_service:
    image: 'apiuser-service:latest'
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "5233:80"
    environment:
      - ConnectionStrings__UserServer=User ID=postgres;Server=host.docker.internal;Port=5432;Database=user_db;Password=postgres;Pooling=True;
    networks:
      - ocelet-net
    depends_on:
      - postgres

  ocelet:
    image: 'ocelet:service'
    environment:
      - ASPNETCORE_ENVIROMENT=Development
    build:
      context: ./APIGatewayOcelot
      dockerfile: Dockerfile
    ports:
      - "5067:80"
    networks:
      - ocelet-net
      - backend
      - frontend
    depends_on:
      - postgres
      - webmusic_service
      - webuser_service

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=music_pg
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - app-data:/var/lib/postgresql/data
    networks:
      - backend
    

  webclient:
    image: 'webclient-image:latest'
    build:
      context: ./MusicClient/client-app
    ports:
      - "3000:3000"
    depends_on:
      - ocelet
    networks:
      - frontend

networks:
  backend:
  frontend:
  ocelet-net:

volumes:
  app-data:
